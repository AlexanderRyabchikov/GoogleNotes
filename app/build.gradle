apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'maven'
apply plugin: 'kotlin-android-extensions'

apply from: '../artifacts.gradle'
apply from: '../quality/config.gradle'

android {

    project.ext.applicationName = appConfig.client.applicationName


    compileSdkVersion toolVersions.android.compileSdk
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion toolVersions.android.minSdk
        targetSdkVersion toolVersions.android.targetSdk
        applicationId appConfig.client.applicationId
        versionCode generateVersionCode(clientModule)
        versionName generateVersionName(clientModule)
        multiDexEnabled true
        resConfigs("ru")

        vectorDrawables.useSupportLibrary = true


        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        disableEmptyStrategyCheck: 'false',
                        enableEmptyStrategyHelper: 'true',
                        defaultMoxyStrategy: 'moxy.viewstate.strategy.OneExecutionStateStrategy'
                ]
            }
        }
    }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }


    signingConfigs {
        debug {
            //TODO Использоваться когда будут ключи
            //storeFile rootProject.file(keystoreProperties['DEBUG_STORE_FILE'])
            //storePassword keystoreProperties['DEBUG_STORE_PASSWORD']
            //keyAlias keystoreProperties['DEBUG_KEY_ALIAS']
            //keyPassword keystoreProperties['DEBUG_KEY_PASSWORD']
        }

        release {
            //storeFile rootProject.file(keystoreProperties["CLIENT_RELEASE_STORE_FILE"])
            //storePassword keystoreProperties['CLIENT_RELEASE_STORE_PASSWORD']
            //keyAlias keystoreProperties['CLIENT_RELEASE_KEY_ALIAS']
            //keyPassword keystoreProperties['CLIENT_RELEASE_KEY_PASSWORD']
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            manifestPlaceholders = [crashlyticsEnabled: false, firebaseAnalytics: true]
        }

        release {
            signingConfig signingConfigs.release
            manifestPlaceholders = [crashlyticsEnabled: true, firebaseAnalytics: true]
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "main"

    productFlavors {
        development {
            dimension "main"
            minSdkVersion toolVersions.android.minDevelopSdk
            buildConfigField("String", "ServerUrl", "$appConfig.development.server")
            buildConfigField("String", "API", "$appConfig.development.api")
        }

        production {
            dimension "main"
            minSdkVersion toolVersions.android.minProductionSdk
            buildConfigField("String", "ServerUrl", "$appConfig.production.server")
            buildConfigField("String", "API", "$appConfig.production.api")
        }
    }

    dataBinding {
        enabled = true
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

pmd {
    ignoreFailures = true
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // MULTIDEX
    implementation 'androidx.multidex:multidex:2.0.1'

    // SUPPORT
    implementation "androidx.appcompat:appcompat:$libVersions.androidx.appcompat"
    implementation "androidx.recyclerview:recyclerview:$libVersions.androidx.recyclerview"
    implementation "androidx.cardview:cardview:$libVersions.androidx.cardview"
    implementation "com.google.android.material:material:$libVersions.androidx.material"
    implementation "androidx.annotation:annotation:$libVersions.androidx.annotation"
    implementation "androidx.constraintlayout:constraintlayout:$libVersions.androidx.constraintLayout"
    implementation "androidx.multidex:multidex:$libVersions.androidx.multidex"
    implementation "androidx.browser:browser:$libVersions.androidx.browser"
    implementation "androidx.vectordrawable:vectordrawable:$libVersions.androidx.vectordrawable"
    implementation "androidx.navigation:navigation-fragment:$libVersions.androidx.navigation"
    implementation "androidx.navigation:navigation-ui:$libVersions.androidx.navigation"


    // DI
    implementation "com.google.dagger:dagger:$libVersions.dagger"
    implementation "com.google.dagger:dagger-android:$libVersions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$libVersions.dagger"
    kapt "com.google.dagger:dagger-compiler:$libVersions.dagger"

    implementation 'com.github.moxy-community:moxy:2.0-alpha05'
    implementation 'com.github.moxy-community:moxy-material:2.0-alpha05'
    kapt 'com.github.moxy-community:moxy-compiler:2.0-alpha05'
    implementation 'com.github.moxy-community:moxy-androidx:2.0-alpha05'

    // PERMISSIONS
    implementation "com.github.hotchemi:permissionsdispatcher:$libVersions.permissions"
    kapt "com.github.hotchemi:permissionsdispatcher-processor:$libVersions.permissions"

    // IMAGE LOADING
    kapt "com.github.bumptech.glide:compiler:$libVersions.glide"

    // IMAGE PICKER
    implementation "com.github.jkwiecien:EasyImage:$libVersions.easyImage"

    // IMAGE CROPPER
    implementation "com.theartofdev.edmodo:android-image-cropper:$libVersions.imageCropper"

    // PHOTO VIEW
    implementation "com.github.chrisbanes:PhotoView:$libVersions.photoView"

    // FRAGMENT ARGS
    implementation "com.hannesdorfmann.fragmentargs:annotation:$libVersions.fragmentArgs"
    kapt "com.hannesdorfmann.fragmentargs:processor:$libVersions.fragmentArgs"

    // ADAPTER
    implementation "net.idik:slimadapter:$libVersions.slimAdapter"

    // RANGE SLIDER
    api("io.apptik.widget:multislider:$libVersions.multislider") { changing = true }

    // FABRIC
    implementation("com.crashlytics.sdk.android:crashlytics:$libVersions.fabricVersion") {
        transitive = true
    }

    implementation "com.google.firebase:firebase-messaging:$libVersions.firebase.messaging"
    implementation "com.google.android.gms:play-services-location:$libVersions.google.services"
    implementation "com.google.android.gms:play-services-gcm:$libVersions.google.services"
    implementation 'com.google.maps.android:android-maps-utils:0.5+'
    implementation "pub.devrel:easypermissions:1.2.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "com.github.siyamed:android-shape-imageview:0.9.3"

    // use -ktx for Kotlin
    implementation 'androidx.navigation:navigation-ui:2.0.0-rc02'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'

    //DATABASE

    implementation "io.requery:requery:$libVersions.requery"
    implementation "io.requery:requery-kotlin:$libVersions.requery"
    implementation "io.requery:requery-android:$libVersions.requery"
    kapt "io.requery:requery-processor:$libVersions.requery"

    implementation 'com.github.florent37:runtime-permission-kotlin:1.0.5'

    // Опционально. Библиотека Play Install Referrer.
    implementation 'com.android.installreferrer:installreferrer:1.0'

    // PLAY SERVICES
    implementation "com.google.android.gms:play-services-maps:$libVersions.google.services"

    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$libVersions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$libVersions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$libVersions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$libVersions.okHttp"

    // RXJAVA
    implementation "io.reactivex.rxjava2:rxjava:$libVersions.rx.rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$libVersions.rx.rxAndroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$libVersions.rx.rxKotlin"


    // PREFERENCES
    implementation "com.orhanobut:hawk:$libVersions.hawk"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "com.google.firebase:firebase-core:$libVersions.firebase.core"
    implementation "com.google.android.gms:play-services-location:$libVersions.google.services"
    implementation "com.google.android.gms:play-services-gcm:$libVersions.google.services"
    implementation 'com.google.android.material:material:1.0.0'

    // IMAGE LOADING
    implementation "com.github.bumptech.glide:glide:$libVersions.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$libVersions.glide"

    // DATETIME PICKER
    implementation "com.wdullaer:materialdatetimepicker:$libVersions.datePicker"
}

apply plugin: 'com.google.gms.google-services'

apply plugin: 'kotlin-android-extensions'
